<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd    
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd    
            http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
			http://www.springframework.org/schema/task
            http://www.springframework.org/schema/task/spring-task-3.1.xsd">


	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<!-- @ResponseBody导致的中文乱码处理 ,要放在component-scan前-->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	    <property name="messageConverters">
	        <list>
	            <bean class="org.springframework.http.converter.StringHttpMessageConverter" />
	            <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
	                <property name="supportedMediaTypes">
	                    <list>
	                    	<value>text/plain;charset=UTF-8</value>
                        	<value>application/json;charset=UTF-8</value>
	                    </list>
	                </property>
	            </bean>
	        </list>
	    </property>
    </bean> -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
                        	<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
			</list>
		</property>
	</bean>
	
	<!-- 对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="com.finance"/>
	<!-- 支持spring3.0新的mvc注解 -->
	<mvc:annotation-driven />  
	<!-- 开启定时器 -->
	<task:annotation-driven/>
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
	    <property name="prefix" value="/pages/" />
	    <property name="suffix" value=".jsp" />
    </bean>
    
    <!-- 文件上传下载 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

	<mvc:resources mapping="/resources/**" location="/resources/" />

    <!-- jsp视图模型支持 -->
    <bean id="jspResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
         <!-- 如果使用jstl的话，配置下面的属性 -->
    	<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
    </bean>

	<!-- Redis服务配置 -->
	<bean id="redisClient" class="com.bwdz.fpt.common.cache.JRedisClient">
		 <!--缓存服务器IP-->
	     <constructor-arg index="0" value="192.168.71.185" />   
		 <!--连接缓存服务器端口（redis默认端口为6379）-->
		  <constructor-arg index="1" value="6379" />
	</bean>  

 	<import resource="classpath:config/spring/mybatis-config.xml"/>
	
    <!-- 配置文件属性注入 -->
	<bean id="propertiesUtils" class="com.finance.util.PropertiesUtils">
		<property name="locations">
			<list>
				<value>classpath:config/properties/finance.properties</value>
			</list>
		</property>
	</bean>

	<!-- 拦截器定义 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/*.do" />
			<bean class="com.finance.interceptor.LoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>

</beans>
